
project(TestProject)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

include_directories(${CMAKE_SOURCE_DIR})


set(SETUP_HEADERS
    Export.h
    foo.h 
)
set(SETUP_SOURCES
    foo.cpp 
)

if(BUILD_SHARED_LIBS)

    add_definitions(-DFOO_LIBRARY)

    add_library( foo SHARED
        ${SETUP_HEADERS}
        ${SETUP_SOURCES}
        )
    
else(BUILD_SHARED_LIBS)

    add_definitions(-DFOO_LIBRARY_STATIC)

    add_library( foo STATIC
        ${SETUP_HEADERS}
        ${SETUP_SOURCES}
        )
        
endif(BUILD_SHARED_LIBS)


SET(INSTALL_INCDIR include)
SET(INSTALL_BINDIR bin)
IF(WIN32)
	SET(INSTALL_LIBDIR bin)
	SET(INSTALL_ARCHIVEDIR lib)
ELSE(WIN32)
	SET(INSTALL_LIBDIR lib${LIB_POSTFIX})
	SET(INSTALL_ARCHIVEDIR lib${LIB_POSTFIX})
ENDIF(WIN32)

INSTALL(
	TARGETS foo
	RUNTIME DESTINATION ${INSTALL_BINDIR}
	LIBRARY DESTINATION ${INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${INSTALL_ARCHIVEDIR}
)

INSTALL(
		FILES       ${SETUP_HEADERS}
		DESTINATION include
	)

add_executable( test main.cpp )
TARGET_LINK_LIBRARIES( test
    foo
    )

INSTALL(
	TARGETS test
	RUNTIME DESTINATION ${INSTALL_BINDIR}
	LIBRARY DESTINATION ${INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${INSTALL_ARCHIVEDIR}
)

# set(CPACK_GENERATOR NSIS)
set(CPACK_GENERATOR ZIP)
set(CPACK_PACKAGE_NAME "NMIC-MDTVS")
set(CPACK_PACKAGE_VERSION "1.0.0")
set(CPACK_PACKAGE_VERSION_MAJOR "1")
set(CPACK_PACKAGE_VERSION_MINOR "0")
set(CPACK_PACKAGE_VERSION_PATCH "0")

set(CPACK_PACKAGE_VENDOR "")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "NMIC-MDTVS")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "NMIC-MDTVS")
SET(CPACK_NSIS_MODIFY_PATH ON)

INCLUDE(CPack)
INCLUDE(CTest)

